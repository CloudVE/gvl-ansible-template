#======================
# Vault Secrets
#======================
rke_registration_token: "{{ vault_rke_registration_token }}"
rke_version: "v1.19.9+rke2r1"
rke_container_image: "rancher/rke2-runtime:v1.19.9-rke2r1"
cluster_password: "{{ vault_cluster_password }}"

# Cloudman Settings
cloudman_postgresql_password: "{{ vault_cloudman_postgresql_password }}"
cloudman_postgresql_postgres_password: "{{ vault_cloudman_postgresql_postgres_password }}"
cloudman_postgresql_keycloak_password: "{{ vault_cloudman_postgresql_keycloak_password }}"
cloudman_cloudlaunch_secret_key: "{{ vault_cloudman_cloudlaunch_secret_key }}"
cloudman_cloudlaunch_fernet_keys: "{{ vault_cloudman_cloudlaunch_fernet_keys }}"
grafana_password: "{{ vault_grafana_password }}"
influxdb_password: "{{ vault_influxdb_password }}"
prometheus_alert_manager_password: "{{ vault_prometheus_alert_manager_password }}"
cm_skip_cloudman: 'false'
# Cloudman Keycloak Settings
cm_keycloak_operator_fork: "keycloak/keycloak-operator"



# CloudMan's rabbitmq service
rabbitmq_password: "{{ vault_rabbitmq_password }}"
rabbitmq_management_password: "{{ vault_rabbitmq_management_password }}"
rabbitmq_erlang_cookie: "{{ vault_rabbitmq_erlang_cookie }}"

# Galaxy settings
galaxy_postgresql_password: "{{ vault_galaxy_postgresql_password }}"
galaxy_postgresql_postgres_password: "{{ vault_galaxy_postgresql_postgres_password }}"
galaxy_postgresql_primary_password: "{{ vault_galaxy_postgresql_primary_password }}"
galaxy_oidc_client_secret: "{{ vault_galaxy_oidc_client_secret }}"
galaxy_id_secret: "{{ vault_galaxy_id_secret }}"

# cloud settings
kube_cloud_provider: aws
kube_cloud_conf: '[Global]'

#======================
# General Settings
#======================
admin_users: sargentl@ohsu.edu,nuwan.goonasekera@unimelb.edu.au,almahmoud@jhu.edu
cluster_hostname: cloudman.cancer.usegalaxy.org
cluster_admin_email: "admin@{{ cluster_hostname }}"
support_alert_email: help@genome.edu.au
cm_chart_version: ''
cm_charts_repo: https://raw.githubusercontent.com/cloudve/helm-charts/master/
cm_deployment_name: cancer-usegalaxy-org
cm_initial_storage_size: '500Gi'

cm_initial_cluster_data:
  app_config:
    config_appliance:
      playbooks:
      - inventory_template: '[controllers]
          ${host}
          [agents]
          [rke_cluster:children]
          controllers
          agents
          [all:vars]
          ansible_ssh_port=22
          ansible_user=''${user}''
          ansible_ssh_private_key_file=pk
          ansible_ssh_extra_args=''-o StrictHostKeyChecking=no'''
        ordinal: 0
        url: https://github.com/cloudve/cloudman-boot
      runner: ansible
      sshUser: ubuntu
    config_cloudlaunch:
      customImageID: null
      firewall:
      - rules:
        - cidr: 0.0.0.0/0
          from: '22'
          protocol: tcp
          to: '22'
        - cidr: 0.0.0.0/0
          from: '80'
          protocol: tcp
          to: '80'
        - cidr: 0.0.0.0/0
          from: '443'
          protocol: tcp
          to: '443'
        - from: '1'
          protocol: tcp
          src_group: cloudlaunch-cm2
          to: '65535'
        - from: '1'
          protocol: udp
          src_group: cloudlaunch-cm2
          to: '65535'
        securityGroup: cloudlaunch-cm2
      gateway: igw-0b30ba27a62562638
      hostnameConfig:
        hostName: cloudman.cancer.usegalaxy.org
        hostnameType: manual
      keyPair: cancerusegalaxy
      network: vpc-09390f8551e6e9c90
      provider_settings:
        ebsOptimised: null
        volumeIOPS: null
      rootStorageSize: 100
      rootStorageType: volume
      staticIP: eipalloc-0a7f4ea114b8edf99
      subnet: subnet-02be9bfba454753ce
      vmType: m5.xlarge
    deployment_config:
      name: newgalaxycancer
  cloud_config:
    credentials:
      aws_access_key: "{{ vault_aws_access_key }}"
      aws_secret_key: "{{ vault_aws_secret_key }}"
      cloud_id: aws
      default: false
      id: 482
      name: cancergalaxyapr132021
    image:
      description: null
      image_id: ami-0885b1f6bd170450c
      name: Ubuntu 20.04 LTS (HVM)
    target:
      id: 11
      resourcetype: CloudDeploymentTarget
      target_zone:
        cloud:
          access_instructions_url: https://aws-portal.amazon.com/gp/aws/developer/account/index.html?action=access-key
          id: aws
          name: Amazon Web Services
          resourcetype: AWSCloud
        name: null
        region:
          cloud: aws
          cloudbridge_settings: null
          ec2_endpoint_url: https://ec2.us-east-1.amazonaws.com
          ec2_is_secure: true
          ec2_validate_certs: true
          id: 11
          name: us-east-1
          region_id: us-east-1
          resourcetype: AWSRegion
          s3_endpoint_url: https://s3.amazonaws.com
          s3_is_secure: true
          s3_validate_certs: true
        zone_id: default
  host_config:
    host_address: cloudman.cancer.usegalaxy.org
    instance_id: i-0c016ac85f964b2dd
    private_ip: 10.0.13.49
    public_ip: 3.218.119.219
    run_cmd: null
    ssh_private_key: '{{ vault_ansible_ssh_key }}'
    ssh_public_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDaO+iEPCRiglTj7Tn/RsZ0S0Z8bD8feLew8EU2c/HKiS7fFjmSn5jznx9/5m9Sms0HryGM/JSs3U/OVcQG5euC4dfi9rH6/F1u0Vs2vM4Jus6wWNtw5In7qWNDrtnFyPxJAXgKnr2t/hM7dyXuN9Xf9FPiJKwhFzX3GXmBFflADcLV9nYKM/LI5fa2lSV1BRIfp4BpgAlshGkOu+dCTyv3/VgIIQw6f41jTkha4ANum4Y8xALokGhaw/ErnNF2Av6icdWWt/tksNcASw7aLidlvnMVj3H5yLuVPkjODDjcuqUfv7zXH2dDw1vn0PRYgWkoCC+GE4O2NQVtT/U+I8M/
    ssh_user: ubuntu

cm_helm_values: |
    cluster_type: KUBE_RKE
    rke_registration_server: {{ rke_registration_server }}
    rke_registration_token: {{ rke_registration_token }}
    cm_initial_cluster_data: |
      {{ cm_initial_cluster_data | default('') | to_nice_yaml(indent=2) | indent(width=2) }}
    helmsman_config:
      repositories:
        - name: cloudve
          url: https://raw.githubusercontent.com/CloudVE/helm-charts/master/
          - name: jupyterhub
          url: https://jupyterhub.github.io/helm-chart/
        template_registries:
        - name: cloudve
          url: https://raw.githubusercontent.com/galaxyproject/cloudlaunch-registry/master/template-registry.yaml
        charts:
        proxyinjector:
          name: cloudve/proxyinjector
          namespace:
      cloudman
          create_namespace: false
    projman_config:
      projects: {}
    cloudlaunch:
      image:
          repository: galaxy/cloudman-ui
          tag: latest
      resources:
          requests:
            cpu: 100m
            memory: 250Mi
          limits:
            cpu: 1000m
            memory: 3000Mi
      cloudlaunchserver:
          image:
            repository: galaxy/cloudman-server
            tag: latest
          resources:
            requests:
              cpu: 200m
              memory: 500Mi
            limits:
              cpu: 1000m
              memory: 5000Mi
          admin_password:
      "{{ cluster_password }}"
          rabbitmq:
            rabbitmqPassword: "{{ random_client_secret }}"
            managementPassword: "{{ random_client_secret }}"
            rabbitmqErlangCookie:
      "{{ random_client_secret }}"
          postgresql:
            postgresqlPassword:
      {{ random_client_secret }}
            postgresqlPostgresPassword: {{ random_client_secret }}
            persistence:
                storageClass: "ebs"
          ingress:
              annotations:
                kubernetes.io/tls-acme: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod
                nginx.ingress.kubernetes.io/secure-backends:
      "true"
            hosts:
                - ~
    {% if not (cluster_hostname | ipaddr)
      %}
                - "{{ cluster_hostname }}"
            tls:
                - secretName:
      "{{ cluster_hostname | replace('.', '-') }}-key"
                  hosts:
                  - "{{ cluster_hostname }}"
    {% endif %}
      ingress:
          annotations:
              kubernetes.io/tls-acme: "true"
            cert-manager.io/cluster-issuer:
      letsencrypt-prod
            nginx.ingress.kubernetes.io/secure-backends: "true"
          hosts:
            - ~
    {% if not (cluster_hostname | ipaddr) %}
        - "{{ cluster_hostname }}"
          tls:
            - secretName: "{{ cluster_hostname | replace('.', '-') }}-key"
              hosts:
                - "{{ cluster_hostname }}"
    {% endif %}
    kubeprometheus:
      persistence:
          storageClass: "nfs"
      alertmanager:
          config:
            global:
                http_config:
                    basic_auth:
                      password: {{ random_client_secret }}
      grafana:
          adminPassword: {{ random_client_secret }}
          grafana.ini:
              server:
                root_url: "https://{{ cluster_hostname }}/grafana"
            auth.generic_oauth:
                auth_url: "https://{{ keycloak_hostname }}/auth/realms/{{ cm_keycloak_realm_name }}/protocol/openid-connect/auth"
                token_url: "https://{{ keycloak_hostname }}/auth/realms/{{ cm_keycloak_realm_name }}/protocol/openid-connect/token"
                api_url: "https://{{ keycloak_hostname }}/auth/realms/{{ cm_keycloak_realm_name }}/protocol/openid-connect/userinfo"
          ingress:
            annotations:
                kubernetes.io/tls-acme: "
      true"
                cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/secure-backends: "true"
            hosts:
    {% if
      not (cluster_hostname | ipaddr) %}
                - "{{ cluster_hostname }}"
              tls:
                - secretName: "{{ cluster_hostname | replace('.', '-') }}-key"
                  hosts:
                    - "{{ cluster_hostname }}"
    {% endif %}
    influxdb:
      setDefaultUser:
        user:
          password: {{ random_client_secret }}
    global:
      domain: "{{ cluster_hostname }}"
      deployment_name: "{{ cm_deployment_name }}"
